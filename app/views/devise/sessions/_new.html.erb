<html>
  <link rel="stylesheet" href="/assets/stylesheets/signinup">
  <div id="login-form-wrapper" style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000; background-color: lightgrey;">
    <div class="login-form-container" style="display: flex; justify-content: center; flex-direction: column; padding: 50px;">
      <%= simple_form_for(resource, as: resource_name, url: session_path(resource_name), html: { class: 'form' }, data: { turbo: :false }) do |f| %>

        <%= f.error_notification %>

        <div class="form-inputs">
          <div class="field required">
            <%= f.label :email %>
            <%= f.email_field :email, autofocus: true, autocomplete: "email", class: 'text-input', required: true %>
          </div>

          <div class="field required">
            <%= f.label :password %>
            <%= f.password_field :password, autocomplete: "current-password", class: 'text-input', required: true %>
          </div>

          <div style="display: flex; flex-direction: column; align-items: right;">
            <div class="form-actions" style="text-align: center; height: 60px;">
              <%= f.button :submit, "Log in", class: "button", style: "margin-bottom: 10px;" %>
            </div>
            <div class="form-actions" style="text-align: center; height: 60px; margin-top: 10px;">
              <button class="button">
                <%= link_to "Sign up", new_registration_path(resource_name) %>
                <style>
                  a {
                    color: white;
                    text-decoration: none;
                  }
                </style>
              </button>
            </div>
            <div class="form-actions" style="text-align: center; height: 60px; margin-top: 10px;">
              <button class="button">
                <%= link_to "Password", new_password_path(resource_name) %>
              </button>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</html>
<style>


  html {
    -webkit-font-smoothing: antialiased;
  }

  @media screen and (min-width: 40em) {
    body {
      font-size: 1.25em;
    }
  }

  .form .button, .form .message, .customSelect, .form .select, .form .textarea, .form .text-input, .form .option-input + label, .form .checkbox-input + label, .form .label {
    padding: 0.75em 1em;
    -webkit-appearance: none;
      -moz-appearance: none;
            appearance: none;
    outline: none;
    line-height: normal;
    border-radius: 0;
    border: none;
    background: none;
    display: block;
  }

  .form .label {
    font-weight: bold;
    color: white;
    padding-top: 0;
    padding-left: 0;
    letter-spacing: 0.025em;
    font-size: 1.125em;
    line-height: 1.25;
    position: relative;
    z-index: 100;
  }
  .required .form .label:after, .form .required .label:after {
    content: " *";
    color: #E8474C !important;
    font-weight: normal;
    font-size: 0.75em;
    vertical-align: top;
  }

  .customSelect, .form .select, .form .textarea, .form .text-input, .form .option-input + label, .form .checkbox-input + label {
    font: inherit;
    line-height: normal;
    width: 100%;
    box-sizing: border-box;
    background: #222222;
    color: white;
    position: relative;
  }
  .customSelect:placeholder, .form .select:placeholder, .form .textarea:placeholder, .form .text-input:placeholder, .form .option-input + label:placeholder, .form .checkbox-input + label:placeholder {
    color: white;
  }
  .customSelect:-webkit-autofill, .form .select:-webkit-autofill, .form .textarea:-webkit-autofill, .form .text-input:-webkit-autofill, .form .option-input + label:-webkit-autofill, .form .checkbox-input + label:-webkit-autofill {
    box-shadow: 0 0 0px 1000px #111111 inset;
    -webkit-text-fill-color: white;
    border-top-color: #111111;
    border-left-color: #111111;
    border-right-color: #111111;
  }
  .customSelect:not(:focus):not(:active).error, .form .select:not(:focus):not(:active).error, .form .textarea:not(:focus):not(:active).error, .form .text-input:not(:focus):not(:active).error, .form .option-input + label:not(:focus):not(:active).error, .form .checkbox-input + label:not(:focus):not(:active).error, .error .customSelect:not(:focus):not(:active), .error .form .select:not(:focus):not(:active), .form .error .select:not(:focus):not(:active), .error .form .textarea:not(:focus):not(:active), .form .error .textarea:not(:focus):not(:active), .error .form .text-input:not(:focus):not(:active), .form .error .text-input:not(:focus):not(:active), .error .form .option-input + label:not(:focus):not(:active), .form .error .option-input + label:not(:focus):not(:active), .error .form .checkbox-input + label:not(:focus):not(:active), .form .error .checkbox-input + label:not(:focus):not(:active) {
    background-size: 8px 8px;
    background-image: linear-gradient(135deg, rgba(232, 71, 76, 0.5), rgba(232, 71, 76, 0.5) 25%, transparent 25%, transparent 50%, rgba(232, 71, 76, 0.5) 50%, rgba(232, 71, 76, 0.5) 75%, transparent 75%, transparent);
    background-repeat: repeat;
  }
  .form:not(.has-magic-focus) .customSelect.customSelectFocus, .form:not(.has-magic-focus) .customSelect:active, .form:not(.has-magic-focus) .select:active, .form:not(.has-magic-focus) .textarea:active, .form:not(.has-magic-focus) .text-input:active, .form:not(.has-magic-focus) .option-input + label:active, .form:not(.has-magic-focus) .checkbox-input + label:active, .form:not(.has-magic-focus) .customSelect:focus, .form:not(.has-magic-focus) .select:focus, .form:not(.has-magic-focus) .textarea:focus, .form:not(.has-magic-focus) .text-input:focus, .form:not(.has-magic-focus) .option-input + label:focus, .form:not(.has-magic-focus) .checkbox-input + label:focus {
    background: #4E4E4E;
  }

  .form .message {
    position: absolute;
    bottom: 0;
    right: 0;
    z-index: 100;
    font-size: 0.625em;
    color: white;
  }

  .form .option-input, .form .checkbox-input {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  }
  .form .option-input + label, .form .checkbox-input + label {
    display: inline-block;
    width: auto;
    color: #4E4E4E;
    position: relative;
    -webkit-user-select: none;
      -moz-user-select: none;
        -ms-user-select: none;
            user-select: none;
    cursor: pointer;
  }
  .form .option-input:focus + label, .form .checkbox-input:focus + label, .form .option-input:active + label, .form .checkbox-input:active + label {
    color: #4E4E4E;
  }
  .form .option-input:checked + label, .form .checkbox-input:checked + label {
    color: white;
  }

  .form .button {
    font: inherit;
    line-height: normal;
    cursor: pointer;
    background: #E8474C;
    color: white;
    font-weight: bold;
    width: auto;
    margin-left: auto;
    font-weight: bold;
    padding-left: 2em;
    padding-right: 2em;
    border-radius: 20px;
    width: 180px;
  }
  .form .button:hover, .form .button:focus, .form .button:active {
    color: white;
    border-color: white;
  }
  .form .button:active {
    position: relative;
    top: 1px;
    left: 1px;
  }

  .form {
    max-width: 40em;
    margin: 0 auto;
    position: relative;
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: flex-end;
  }
  .form .field {
    width: 100%;
    margin: 0 0 1.5em 0;
  }
  @media screen and (min-width: 40em) {
    .form .field.half {
      width: calc(50% - 1px);
    }
  }
  .form .field.last {
    margin-left: auto;
  }
  .form .textarea {
    max-width: 100%;
  }
  .form .select {
    text-indent: 0.01px;
    text-overflow: "" !important;
  }
  .form .select::-ms-expand {
    display: none;
  }
  .form .checkboxes, .form .options {
    padding: 0;
    margin: 0;
    list-style-type: none;
    overflow: hidden;
  }
  .form .checkbox, .form .option {
    float: left;
    margin: 1px;
  }
  .customSelect {
    pointer-events: none;
  }
  .customSelect:after {
    content: "";
    pointer-events: none;
    width: 0.5em;
    height: 0.5em;
    border-style: solid;
    border-color: white;
    border-width: 0 3px 3px 0;
    position: absolute;
    top: 50%;
    margin-top: -0.625em;
    right: 1em;
    transform-origin: 0 0;
    transform: rotate(45deg);
  }
  .customSelect.customSelectFocus:after {
    border-color: white;
  }
  .magic-focus {
    position: absolute;
    z-index: 0;
    width: 0;
    pointer-events: none;
    background: rgba(255, 255, 255, 0.15);
    transition: top 0.2s, left 0.2s, width 0.2s;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    transform-style: preserve-3d;
    will-change: top, left, width;
    transform-origin: 0 0;
  }

</style>
<script>
  class MagicFocus {
  constructor(parent) {
    this.parent = parent;
    if (!this.parent) return;

    this.focus = document.createElement('div');
    this.focus.classList.add('magic-focus');
    this.parent.classList.add('has-magic-focus');
    this.parent.appendChild(this.focus);

    const inputs = this.parent.querySelectorAll('input, textarea, select');
    for (let input of inputs) {
      input.addEventListener('focus', () => {
        window.magicFocus.show();
      });
      input.addEventListener('blur', () => {
        window.magicFocus.hide();
      });
    }
  }

  show() {
    const el = document.activeElement;
    if (!['INPUT', 'SELECT', 'TEXTAREA'].includes(el.nodeName)) return;

    clearTimeout(this.reset);

    let forAttr = el.getAttribute('for');
    if (['checkbox', 'radio'].includes(el.type)) {
      forAttr = el.id;
    }
    const labelEl = document.querySelector(`[for=${forAttr}]`);
    const elTop = el.offsetTop || 0;
    const elLeft = el.offsetLeft || 0;
    const elWidth = el.offsetWidth || 0;
    const elHeight = el.offsetHeight || 0;
    this.focus.style.top = `${elTop}px`;
    this.focus.style.left = `${elLeft}px`;
    this.focus.style.width = `${elWidth}px`;
    this.focus.style.height = `${elHeight}px`;

    const previewNameEl = document.querySelector('#preview-name');
    const previewCategoryEl = document.querySelector('#preview-category');
    const previewDescriptionEl = document.querySelector('#preview-description');
    const previewPostalCodeEl = document.querySelector('#preview-postal-code');
    const previewQuantityEl = document.querySelector('#preview-quantity');
    const previewMinDaysRentEl = document.querySelector('#preview-min-days-rent');
    const previewPriceEl = document.querySelector('#preview-price');
    previewNameEl.textContent = document.querySelector('#item_name').value;
    previewCategoryEl.textContent = document.querySelector('#item_category').value;
    previewDescriptionEl.textContent = document.querySelector('#item_description').value;
    previewPostalCodeEl.textContent = document.querySelector('#item_postal_code').value;
    previewQuantityEl.textContent = document.querySelector('#item_quantity').value;
    previewMinDaysRentEl.textContent = document.querySelector('#item_min_days_rent').value;
    previewPriceEl.textContent = document.querySelector('#item_price').value;

    const previewImageEl = document.querySelector('#preview-image');
    if (el.type === 'file' && el.files && el.files.length > 0) {
      previewImageEl.style.display = 'block';
      previewImageEl.src = URL.createObjectURL(el.files[0]);
    } else {
      previewImageEl.style.display = 'none';
      previewImageEl.removeAttribute('src');
    }
  }

  hide() {
    const el = document.activeElement;
    if (!['INPUT', 'SELECT', 'TEXTAREA', 'LABEL'].includes(el.nodeName)) {
      this.focus.style.width = '0';
    }

    this.reset = setTimeout(() => {
      this.focus.removeAttribute('style');
    }, 200);
  }
}

// Initialize
window.magicFocus = new MagicFocus(document.querySelector('.form'));

$(function() {
  $('.select').customSelect();
});

</script>
